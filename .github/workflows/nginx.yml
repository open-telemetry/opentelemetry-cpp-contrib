name: nginx instrumentation CI

on:
  push:
    branches: "*"
    paths:
      - 'instrumentation/nginx/**'
      - '.github/workflows/nginx.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'instrumentation/nginx/**'
      - '.github/workflows/nginx.yml'

jobs:
  nginx-build-test:
    name: nginx
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        image: ["ubuntu:24.04", "debian:11", "alpine:3.20", "amazonlinux:2", "amazonlinux:2023"]
        nginx: ["1.27.3", "1.27.1", "1.26.2", "1.24.0", "1.22.1"]
    steps:
      - name: checkout otel nginx
        uses: actions/checkout@v4
      - name: setup
        run: |
          sudo ./instrumentation/nginx/ci/setup_environment.sh
      - name: setup buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
      - name: build express backend docker
        run: |
          cd instrumentation/nginx
          docker build -t otel-nginx-test/express-backend \
            -f test/backend/simple_express/Dockerfile \
            --cache-from type=local,src=/tmp/buildx-cache/express \
            --cache-to type=local,dest=/tmp/buildx-cache/express-new \
            --load \
            test/backend/simple_express
      - name: Choose Dockerfile
        run: |
          if [[ "${{ matrix.image }}" == "alpine"* ]]; then
            echo "dockerfile=Dockerfile_alpine" >> $GITHUB_ENV
          elif [[ "${{ matrix.image }}" == "amazonlinux"* ]]; then
            echo "dockerfile=Dockerfile_amazonlinux" >> $GITHUB_ENV
          else
            echo "dockerfile=Dockerfile" >> $GITHUB_ENV
          fi
      - name: build nginx docker
        run: |
          cd instrumentation/nginx
          docker build -t otel-nginx-test/nginx \
            --build-arg image=${{ matrix.image }} \
            -f test/${{ env.dockerfile }} \
            --cache-from type=local,src=/tmp/buildx-cache/nginx \
            --cache-to type=local,dest=/tmp/buildx-cache/nginx-new \
            --load \
            .
      - name: update cache
        run: |
          rm -rf /tmp/buildx-cache/express
          rm -rf /tmp/buildx-cache/nginx
          mv /tmp/buildx-cache/express-new /tmp/buildx-cache/express
          mv /tmp/buildx-cache/nginx-new /tmp/buildx-cache/nginx
      - name: run tests
        run: |
          cd instrumentation/nginx/test/instrumentation
          mix local.hex --force --if-missing
          mix local.rebar --force --if-missing
          mix deps.get
          mix test
      - name: copy artifacts
        id: artifacts
        run: |
          cd instrumentation/nginx
          mkdir -p /tmp/otel_ngx/
          docker build -f test/${{ env.dockerfile }} \
          --build-arg image=${{ matrix.image }} \
          --target export \
          --output type=local,dest=/tmp/otel_ngx .
          echo "artifactName=otel_ngx_module-$(echo ${{ matrix.image }} | sed s/:/-/)-${{ matrix.nginx }}.so" >> $GITHUB_ENV
      - name: upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.artifactName }}
          path: /tmp/otel_ngx/otel_ngx_module.so
